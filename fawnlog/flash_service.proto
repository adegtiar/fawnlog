option py_generic_services = true;

message ReadRequest {
    required int64 offset = 1;
}

message ReadResponse {
    enum Status {
        SUCCESS = 0;
        ERROR_UNWRITTEN = 1;
        ERROR_FILLED_HOLE = 2;
    }
    required Status status = 1;
    optional bytes data = 2; // only return data when status is SUCCESS
}

message WriteRequest {
    required bytes data_id = 1;
    required bytes data = 2;
}

message WriteResponse {
    enum Status {
        SUCCESS = 0;
        ERROR_OVERWRITTEN = 1;
        ERROR_FILLED_HOLE = 2;
        ERROR_OVERSIZED_DATA = 3;
        ERROR_NO_CAPACITY = 4;
    }
    required Status status = 1;
    required int64 token = 2;
    required float token_timestamp = 3;
    required float request_timestamp = 4;
    required float ips = 5;
}

message FillHoleRequest {
    required int64 offset = 1;
}

message FillHoleResponse {
    enum Status {
        SUCCESS = 0;
        ERROR_OVERWRITTEN = 1;
    }
    required Status status = 1;
}

message ResetRequest {
}

message ResetResponse {
    enum Status {
        SUCCESS = 0;
        ERROR = 1;
    }
    required Status status = 1;
}

message WriteOffsetRequest {
    required bytes data_id = 1;
    required int64 offset = 2;
    required bool is_full = 3;
    message IpsMeasure {
        required int64 token = 1;
        required float request_timestamp = 2;
        required float token_timestamp = 3;
        required float ips = 4;
    }
}

message WriteOffsetResponse {
}

service FlashService {
    rpc Read(ReadRequest) returns (ReadResponse);
    rpc Write(WriteRequest) returns (WriteResponse);
    rpc FillHole(FillHoleRequest) returns (FillHoleResponse);
    rpc Reset(ResetRequest) returns (ResetResponse);
    rpc WriteOffset(WriteOffsetRequest) returns(WriteOffsetResponse);
}
